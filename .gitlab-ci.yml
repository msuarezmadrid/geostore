image: php:7.1-apache

variables:
  MYSQL_DATABASE: lardani
  MYSQL_ROOT_PASSWORD: mysql
  DB_HOST: mysql
  DB_USERNAME: root

stages:
  - pre
  - installs
  - test

cache:
  paths:
    - vendor

services:
  - mysql:5.7

mysql:
  image: mysql:5.7
  stage: pre
  tags:
    - lardani
  script:
    - echo "create database IF NOT EXISTS "$MYSQL_DATABASE"; " | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql "$MYSQL_DATABASE"

laravel:
  image : php:7.1-apache
  stage : installs
  tags:
    - lardani
  script : 
    - bash ci/docker_install.sh > /dev/null 
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - mv composer.phar /usr/local/bin/composer
    - ls  -l
    - mv .env.example .env
    - composer dump-autoload
    - php artisan migrate:install
    - php artisan migrate --seed

code-quality:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: test
  tags:
    - lardani
  script: sonar-scanner -Dsonar.qualitygate.wait=true
  allow_failure: true

units:
  stage : test
  tags:
    - lardani
  script:
    - ./vendor/bin/phpunit tests/Unit/
